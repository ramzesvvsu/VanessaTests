//начало текста модуля

///////////////////////////////////////////////////
//Служебные функции и процедуры
///////////////////////////////////////////////////

&НаКлиенте
// контекст фреймворка Vanessa-Behavior
Перем Ванесса;
 
&НаКлиенте
// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;
 
&НаКлиенте
// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-Behavior.
Перем КонтекстСохраняемый Экспорт;

&НаКлиенте
// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,Транзакция,Параметр);

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯИзменяюКурсВКурсСДО(Парам01)","ЯИзменяюКурсВКурсСДО","Когда Я изменяю курс ""ВанесаОПКурс1"" в курс СДО");

	Возврат ВсеТесты;
КонецФункции
	
&НаСервере
// Служебная функция.
Функция ПолучитьМакетСервер(ИмяМакета)
	ОбъектСервер = РеквизитФормыВЗначение("Объект");
	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);
КонецФункции
	
&НаКлиенте
// Служебная функция для подключения библиотеки создания fixtures.
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакетСервер(ИмяМакета);
КонецФункции



///////////////////////////////////////////////////
//Работа со сценариями
///////////////////////////////////////////////////

&НаКлиенте
// Процедура выполняется перед началом каждого сценария
Процедура ПередНачаломСценария() Экспорт
	
КонецПроцедуры

&НаКлиенте
// Процедура выполняется перед окончанием каждого сценария
Процедура ПередОкончаниемСценария() Экспорт
	
КонецПроцедуры



///////////////////////////////////////////////////
//Реализация шагов
///////////////////////////////////////////////////

&НаКлиенте
//Когда Я изменяю курс "ВанесаОПКурс1" в курс СДО
//@ЯИзменяюКурсВКурсСДО(Парам01)
Процедура ЯИзменяюКурсВКурсСДО(НаименованиеКурса) Экспорт
	ЯИзменяюКурсВКурсСДОНаСервере(НаименованиеКурса);
КонецПроцедуры

Процедура ЯИзменяюКурсВКурсСДОНаСервере(НаименованиеКурса)
	
	НайденныйКурс = Справочники.омКурсыОбучения.НайтиПоНаименованию(НаименованиеКурса);
	Если НайденныйКурс = Справочники.омКурсыОбучения.ПустаяСсылка() Тогда
		ВызватьИсключение "КурсНеНайден";
	Иначе
		_Об = НайденныйКурс.ПолучитьОбъект();
		_Об.IDСДО = "123";
		_Об.ЗагруженССДО = Истина;
		_Об.ОбменДанными.Загрузка = Истина;
		_Об.Записать();
	 КонецЕсли;
КонецПроцедуры

//окончание текста модуля